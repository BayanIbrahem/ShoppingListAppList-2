plugins {
	id 'com.android.application'
	id 'org.jetbrains.kotlin.android'
	id 'kotlin-kapt'
}

android {
	namespace 'com.example.testing'
	compileSdk 33

	defaultConfig {
		applicationId "com.example.testing"
		minSdk 21
		targetSdk 33
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
	kotlinOptions {
		jvmTarget = '1.8'
	}
}

dependencies {
	// variables:
	def truth = "1.0.1"
	def room = "2.5.0"
	def retrofit = "2.9.0"
	def retrofit_interceptor = "4.7.2"
	def coroutines = "1.6.1"
	def coroutines_lifecycle = "2.5.1"
	def nav = "2.5.3"
	def glide = "4.11.0"
	def ktx_viewModel = "1.1.0"
	def dagger = "2.28-alpha"
	def timber = "4.7.1"
	def hilt = "1.0.0-alpha03"

	implementation 'androidx.core:core-ktx:1.9.0'
	implementation 'androidx.appcompat:appcompat:1.6.0'
	implementation 'com.google.android.material:material:1.7.0'
	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

	// Room:
	implementation "androidx.room:room-runtime:$room"
	kapt "androidx.room:room-compiler:$room"

	// Kotlin Extensions and Coroutines support for Room:
	implementation "androidx.room:room-ktx:$room"

	// Retrofit:
	implementation "com.sqareup.retrofit2:retrofit2:$retrofit"
	implementation "com.sqareup.retrofit2:converter-gson:$retrofit"
	implementation "com.sqareup.retrofit2:logging-interceptor:$retrofit_interceptor"

	// Coroutines:
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

	// Coroutines lifecycle Scopes:
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$coroutines_lifecycle"
	implementation "androidx.lifecycle:lifecycle-runtime-ktx:$coroutines_lifecycle"

	// Navigation Components:
	implementation "androidx.navigation:navigation-fragment-ktx:$nav"
	implementation "androidx.navigation:navigation-ui-ktx:$nav"

	// Glide:
	implementation "com.github.bumptech.glide:glide:$glide"
	kapt "om.github.bumptech.glide:compiler:$glide"

	// Activity KTX for viewModels()
	implementation "androidx.avtivity:activity-ktx:$ktx_viewModel"

	// Dagger - Hilt:
	implementation "com.google.dagger:hilt-android:$dagger"
	kapt "com.google.dagger:hilt-android-compiler:$dagger"

	implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt"
	kapt "androidx.hilt:hilt-compiler:$hilt"

	// Timber:
	implementation "com.jakewharton.timber:timber:$timber"


	// testing:
	// unit testing:
	implementation "androidx.test:core:1.5.0"
	testImplementation "junit:junit:4.13.2"
	testImplementation "org.hamcrest:hamcrest-all:1.3"
	testImplementation "androidx.arch.core:core-testing:2.1.0"
	testImplementation "org.robolectric:robolectric:4.3.1"
	testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
	testImplementation "com.google.truth:truth:$truth"
	testImplementation "org.mockito:mockito-core:2.21.0"

	// android testing:
	androidTestImplementation 'androidx.test.ext:junit:1.1.5'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
	androidTestImplementation "com.google.truth:truth:$truth"
	androidTestImplementation "junit:junit:4.13.2"
	androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
	androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
	androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
	androidTestImplementation "org.mockito:mockito-core:2.21.0"
	// ...testing
}